/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(tagged_stream_fixed_length_padder.h) */
/* BINDTOOL_HEADER_FILE_HASH(0d772c5e6aa39601ce45854cb2da310f)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/UTAT_HERON/tagged_stream_fixed_length_padder.h>
// pydoc.h is automatically generated in the build directory
#include <tagged_stream_fixed_length_padder_pydoc.h>

void bind_tagged_stream_fixed_length_padder(py::module& m)
{

    using tagged_stream_fixed_length_padder =
        gr::UTAT_HERON::tagged_stream_fixed_length_padder;


    py::class_<tagged_stream_fixed_length_padder,
               gr::block,
               gr::basic_block,
               std::shared_ptr<tagged_stream_fixed_length_padder>>(
        m, "tagged_stream_fixed_length_padder", D(tagged_stream_fixed_length_padder))

        .def(py::init(&tagged_stream_fixed_length_padder::make),
             py::arg("len_tag_key"),
             py::arg("final_samples_per_symbol"),
             py::arg("final_buffer_len"),
             py::arg("filler"),
             py::arg("additional_symb_overflow"),
             D(tagged_stream_fixed_length_padder, make))

        .def(
            "get_len_tag_key",
            &tagged_stream_fixed_length_padder::get_len_tag_key,
            D(tagged_stream_fixed_length_padder, get_len_tag_key)
        )

        .def(
            "get_final_samples_per_symbol",
            &tagged_stream_fixed_length_padder::get_final_samples_per_symbol,
            D(tagged_stream_fixed_length_padder, get_final_samples_per_symbol)
        )

        .def(
            "get_final_buffer_len",
            &tagged_stream_fixed_length_padder::get_final_buffer_len,
            D(tagged_stream_fixed_length_padder, get_final_buffer_len)
        )

        .def(
            "get_filler",
            &tagged_stream_fixed_length_padder::get_filler,
            D(tagged_stream_fixed_length_padder, get_filler)
        )

        .def(
            "get_additional_symb_overflow",
            &tagged_stream_fixed_length_padder::get_additional_symb_overflow,
            D(tagged_stream_fixed_length_padder, get_additional_symb_overflow)
        )

        .def(
            "set_len_tag_key",
            &tagged_stream_fixed_length_padder::set_len_tag_key,
            py::arg("s"),
            D(tagged_stream_fixed_length_padder, set_len_tag_key)
        )

        .def(
            "set_final_samples_per_symbol",
            &tagged_stream_fixed_length_padder::set_final_samples_per_symbol,
            py::arg("d"),
            D(tagged_stream_fixed_length_padder, set_final_samples_per_symbol)
        )

        .def(
            "set_final_buffer_len",
            &tagged_stream_fixed_length_padder::set_final_buffer_len,
            py::arg("i"),
            D(tagged_stream_fixed_length_padder, set_final_buffer_len)
        )

        .def(
            "set_filler",
            &tagged_stream_fixed_length_padder::set_filler,
            py::arg("c"),
            D(tagged_stream_fixed_length_padder, set_filler)
        )

        .def(
            "set_additional_symb_overflow",
            &tagged_stream_fixed_length_padder::set_additional_symb_overflow,
            py::arg("i"),
            D(tagged_stream_fixed_length_padder, set_additional_symb_overflow)
        )

        ;
}
